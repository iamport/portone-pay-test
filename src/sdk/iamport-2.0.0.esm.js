function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var ne=Object.defineProperty;var l=(_,r)=>{for(var e in r)ne(_,e,{get:r[e],enumerable:!0})};var H={};l(H,{requestIdentityVerification:()=>Pe,requestIssueBillingKey:()=>pe,requestPayment:()=>Oe});var ae={CORE_SERVER:"https://service.iamport.kr",CHECKOUT_SERVER:"https://checkout-service.prod.iamport.co",DRIVER_SERVE_URL:"https://cdn.portone.io/drivers",PAYMENT_BRIDGE_URL:"https://payment-bridge-prod.vercel.app",SDK_VERSION:"1.8.2"},a=ae;var S={"loadable-ui/payment/payment-bridge":"loadable-ui/payment/payment-bridge-Z_rRTluVbSX4xRcHJUJEU6yvjGalB0GU723HbqhpbNg=.js","pg/danal/identity-verification/popup-impl":"pg/danal/identity-verification/popup-impl-F555xVGgCTVIWatjkuP7Z9is0EniuQxGRTFZZ3tTbtw=.html","pg/danal/identity-verification/popup":"pg/danal/identity-verification/popup-DugAHQhtUUuTbYlMW8SKJBBuCIVPPvxQD7Bzhntp5w4=.js","pg/danal/identity-verification/redirection":"pg/danal/identity-verification/redirection-ul_5Llh0jNUGyRwGRN-biqYjSQBVqchKdGGnyF6Aa4I=.js","pg/kakaopay/issue-billing-key/iframe-impl":"pg/kakaopay/issue-billing-key/iframe-impl-nPWHHahLEQ_Ybp71EB40nNVb0IaAYThH20sasw1T4Lk=.html","pg/kakaopay/issue-billing-key/iframe":"pg/kakaopay/issue-billing-key/iframe-bAR9IvszAiEqQ5BgQZat0LoJ-g3rrT1z1HIb8S2tQBE=.js","pg/kakaopay/issue-billing-key/redirection":"pg/kakaopay/issue-billing-key/redirection-a97lBRhi37KEEIRMMDggDF_j1PkvUSip01T1Y20uTXk=.js","pg/kakaopay/payment/iframe-impl":"pg/kakaopay/payment/iframe-impl-_bEpp9-Y7VeXXhrwjo71EtceBB-s7nD9MIpYXmifxxM=.html","pg/kakaopay/payment/iframe":"pg/kakaopay/payment/iframe-zoXFUj0969r6-kdYtNHJ2e-iexeM4nQJto_7obHNwmU=.js","pg/kakaopay/payment/redirection":"pg/kakaopay/payment/redirection--TzcxYxXGBfK77R6iEizyMJ7xfS0jHE5WzZEHhwp-SU=.js","pg/ksnet/payment/iframe-impl":"pg/ksnet/payment/iframe-impl-EGGMu3sgqeTHaLXcJjPvez0uLOawli-KX4hNqbGr144=.html","pg/ksnet/payment/iframe":"pg/ksnet/payment/iframe-G7ZWaXam8X2cNLOvTPvxsmGjc-xaXzQuhEVyuDcEMUw=.js","pg/ksnet/payment/redirection":"pg/ksnet/payment/redirection-tZarULlso-qW5677MOoUJxJu0zWbApoLjksKCUFfJzY=.js","pg/naverpay/issue-billing-key/popup-impl":"pg/naverpay/issue-billing-key/popup-impl-Jc4Y_1rcLVLju7SMPWalvOGxO3mYOg5EQ081Kg8AbTc=.html","pg/naverpay/issue-billing-key/popup":"pg/naverpay/issue-billing-key/popup-bhOGZKopj-xAg_DpA6_hYV792R4ntmXqWl3fnZzx_sM=.js","pg/naverpay/issue-billing-key/redirection":"pg/naverpay/issue-billing-key/redirection-yMN2ZlAU3NqXkcxcHI_oJg4Kk_H5QadiacN6J6tPMBo=.js","pg/naverpay/payment/popup-impl":"pg/naverpay/payment/popup-impl-yQAnvZZqKTtBX2ZKzIhFBKBAdaoslVAsP74P7sLgGQA=.html","pg/naverpay/payment/popup":"pg/naverpay/payment/popup-HWj6MWV0PQD95ZEpLS0E6rY8sSrd-m6n4E4tNKDv3mg=.js","pg/naverpay/payment/redirection":"pg/naverpay/payment/redirection-K1b-7NYpN0ENwWdd9JjYLJAsR2BOtQXWIvzUL_oGbE4=.js","pg/nice-v2/issue-billing-key/iframe-impl":"pg/nice-v2/issue-billing-key/iframe-impl-xCU4fT3DHQkOudimGlfgLfg1YW0PE5aiUZUbxB8G0ZQ=.html","pg/nice-v2/issue-billing-key/iframe":"pg/nice-v2/issue-billing-key/iframe-hH294wR5-KyLV88lZSzOUH0e4QkgWWOBqldsIH4CTg8=.js","pg/nice-v2/issue-billing-key/redirection":"pg/nice-v2/issue-billing-key/redirection-wIMBrNhCo4CM2AMs2Wdn65aGrj7Wrb97FIJRo9h05C8=.js","pg/nice-v2/payment/iframe-impl":"pg/nice-v2/payment/iframe-impl-9zY3EqE_LNmmsTXYHWkjgRxXFbBqJxm7YauyYzVC-2A=.html","pg/nice-v2/payment/iframe":"pg/nice-v2/payment/iframe-TIOYCTetUyWbASqC9cNpNvs34lz3-62Hlyg4GoXOvPA=.js","pg/nice-v2/payment/redirection":"pg/nice-v2/payment/redirection-lwe2DstU50_oOIMLzUAUNwVtsSWTbi3hHK5oyRVSfpY=.js","pg/paypal-v2/issue-billing-key/ui":"pg/paypal-v2/issue-billing-key/ui-EXsrEg_LN_JuRP9vf0bzidwNKmkKLSr7jzefEjHJAJ4=.js","pg/paypal-v2/payment/ui":"pg/paypal-v2/payment/ui-c8rReYc2TkUJ3Y-2OaQjBB0z5sjSvZ2kkQwElFcfvjE=.js","pg/smartro-v2/issue-billing-key/iframe-impl":"pg/smartro-v2/issue-billing-key/iframe-impl-1qQJdtmMZs11wI03TTYyIWuOtCHvJfErGHR3yNur-CE=.html","pg/smartro-v2/issue-billing-key/iframe":"pg/smartro-v2/issue-billing-key/iframe-YPrhBel7L63e6U2h7ISEG-BGR2-CGPZUBXkBKle_8M4=.js","pg/smartro-v2/issue-billing-key/redirection":"pg/smartro-v2/issue-billing-key/redirection-cZnhfFhQIkWUSM4GLHEGBTnh3c7DKGV06Mblq2j2vcs=.js","pg/smartro-v2/payment/iframe-impl":"pg/smartro-v2/payment/iframe-impl-2ay9t8Ocr3kRwN0Lfjxu3-fPLzxiTC74S1IyMn1r2-U=.html","pg/smartro-v2/payment/iframe":"pg/smartro-v2/payment/iframe-hmdVBI1XEaQj-cMeM9qDboCU9cSW-BE6mliogUgn7Wg=.js","pg/smartro-v2/payment/redirection":"pg/smartro-v2/payment/redirection-OqfLEP3KKDwz1WYaehFCQkNS3o_y316uVQZhIzQo4zI=.js","pg/toss-brandpay/payment/iframe-impl":"pg/toss-brandpay/payment/iframe-impl-KnksSKm1zr6qycoFuWKa0IIYp5X8-x6ZcV2p9r8y62E=.html","pg/toss-brandpay/payment/iframe":"pg/toss-brandpay/payment/iframe-nfnZwghlbMJ-XB4_c-GsAPf5Syyr56Dono43A2c3gko=.js","pg/toss-brandpay/payment/ui":"pg/toss-brandpay/payment/ui-lLoqFZ-_N9t29jQViPttwrmbTubEUkFJPo5F7qao87k=.js","pg/tosspayments/issue-billing-key/iframe-impl":"pg/tosspayments/issue-billing-key/iframe-impl-iuO8t7bMeEEeYqlUHY_-7S5DIS7D270ZMM4MdfKjFe8=.html","pg/tosspayments/issue-billing-key/iframe":"pg/tosspayments/issue-billing-key/iframe-vkFlld-uY2kFkkC0mN_9EZClcANBlxDirA4AZVq_8rw=.js","pg/tosspayments/issue-billing-key/redirection":"pg/tosspayments/issue-billing-key/redirection-S7_C-Aj-v9fOFPyllGlLa_jYdWDFu5vMqtItxgcGuLI=.js","pg/tosspayments/payment/iframe-impl":"pg/tosspayments/payment/iframe-impl-iY27EZ1aWSm9SwNAfz9GFOe62_c0tb1PByZmhc-VNoI=.html","pg/tosspayments/payment/iframe":"pg/tosspayments/payment/iframe-SBN5-QUTHZYpBqxj1j5xinsS7m3wijP4ecGaz2K6rQ4=.js","pg/tosspayments/payment/redirection":"pg/tosspayments/payment/redirection-MSM701ez6KPuDSOkDq7M1XSZxpBsQHmpMrz_qTyajr0=.js"};var O={},c=_=>{if("pgProvider"in _){let r=s=>s.replace("PG_PROVIDER_","").replace(/_/g,"-").toLowerCase(),{pgProvider:e,transactionType:i,windowType:t}=_;return`pg/${r(e)}/${r(i)}/${r(t)}`}else{let r=t=>t.replace(/_/g,"-").toLowerCase(),{transactionType:e,uiType:i}=_;return`loadable-ui/${r(e)}/${r(i)}`}},y=_=>{let r=S[_];if(!r)throw new Error(`\uC870\uAC74\uC5D0 \uB9DE\uB294 \uB4DC\uB77C\uC774\uBC84(${_})\uAC00 \uC5C6\uC2B5\uB2C8\uB2E4.`);return new Promise(async(e,i)=>{await P(),oe();let t=document.createElement("script");t.async=!0,t.src=`${a.DRIVER_SERVE_URL}/${r}`,t.addEventListener("load",()=>e()),t.addEventListener("error",()=>i(new Error(`\uAE30\uB2A5 \uC2E4\uD589\uC744 \uC704\uD55C \uC2A4\uD06C\uB9BD\uD2B8 \uB85C\uB529\uC5D0 \uC2E4\uD328\uD558\uC600\uC2B5\uB2C8\uB2E4. (\uB4DC\uB77C\uC774\uBC84 ID: ${_})`))),document.body.appendChild(t)})};function oe(){window.__PORTONE__={registerDriver(_,r){O[_]=r}}}async function P(){await Promise.all(Object.values(O).filter(Boolean).map(_=>_.onBeforeCleanup?.({slots:a,driverManifest:S})));for(let _ of Object.keys(O)){let r=`${a.DRIVER_SERVE_URL}/${S[_]}`,e=document.querySelector(`script[src="${r}"]`);e&&e.parentNode?.removeChild(e),delete O[_]}}var Y={PAYMENT:"PAYMENT",ISSUE_BILLING_KEY:"ISSUE_BILLING_KEY",IDENTITY_VERIFICATION:"IDENTITY_VERIFICATION"};var w={BANK_OF_KOREA:"BANK_BANK_OF_KOREA",KOREA_DEVELOPMENT_BANK:"BANK_KOREA_DEVELOPMENT_BANK",INDUSTRIAL_BANK_OF_KOREA:"BANK_INDUSTRIAL_BANK_OF_KOREA",KOOKMIN_BANK:"BANK_KOOKMIN_BANK",SUHYUP_BANK:"BANK_SUHYUP_BANK",EXPORT_IMPORT_BANK_OF_KOREA:"BANK_EXPORT_IMPORT_BANK_OF_KOREA",NH_NONGHYUP_BANK:"BANK_NH_NONGHYUP_BANK",LOCAL_NONGHYUP:"BANK_LOCAL_NONGHYUP",WOORI_BANK:"BANK_WOORI_BANK",SC_BANK_KOREA:"BANK_SC_BANK_KOREA",CITI_BANK_KOREA:"BANK_CITI_BANK_KOREA",DAEGU_BANK:"BANK_DAEGU_BANK",BUSAN_BANK:"BANK_BUSAN_BANK",GWANGJU_BANK:"BANK_GWANGJU_BANK",JEJU_BANK:"BANK_JEJU_BANK",JEONBUK_BANK:"BANK_JEONBUK_BANK",KYONGNAM_BANK:"BANK_KYONGNAM_BANK",KFCC:"BANK_KFCC",SHINHYUP:"BANK_SHINHYUP",SAVINGS_BANK_KOREA:"BANK_SAVINGS_BANK_KOREA",MORGAN_STANLEY_BANK:"BANK_MORGAN_STANLEY_BANK",HSBC_BANK:"BANK_HSBC_BANK",DEUTSCHE_BANK:"BANK_DEUTSCHE_BANK",JP_MORGAN_CHASE_BANK:"BANK_JP_MORGAN_CHASE_BANK",MIZUHO_BANK:"BANK_MIZUHO_BANK",MUFG_BANK:"BANK_MUFG_BANK",BANK_OF_AMERICA_BANK:"BANK_BANK_OF_AMERICA_BANK",BNP_PARIBAS_BANK:"BANK_BNP_PARIBAS_BANK",ICBC:"BANK_ICBC",BANK_OF_CHINA:"BANK_BANK_OF_CHINA",NATIONAL_FORESTRY_COOPERATIVE_FEDERATION:"BANK_NATIONAL_FORESTRY_COOPERATIVE_FEDERATION",UNITED_OVERSEAS_BANK:"BANK_UNITED_OVERSEAS_BANK",BANK_OF_COMMUNICATIONS:"BANK_BANK_OF_COMMUNICATIONS",CHINA_CONSTRUCTION_BANK:"BANK_CHINA_CONSTRUCTION_BANK",EPOST:"BANK_EPOST",KODIT:"BANK_KODIT",KIBO:"BANK_KIBO",HANA_BANK:"BANK_HANA_BANK",SHINHAN_BANK:"BANK_SHINHAN_BANK",K_BANK:"BANK_K_BANK",KAKAO_BANK:"BANK_KAKAO_BANK",TOSS_BANK:"BANK_TOSS_BANK",KCIS:"BANK_KCIS",DAISHIN_SAVINGS_BANK:"BANK_DAISHIN_SAVINGS_BANK",SBI_SAVINGS_BANK:"BANK_SBI_SAVINGS_BANK",HK_SAVINGS_BANK:"BANK_HK_SAVINGS_BANK",WELCOME_SAVINGS_BANK:"BANK_WELCOME_SAVINGS_BANK",SHINHAN_SAVINGS_BANK:"BANK_SHINHAN_SAVINGS_BANK",KYOBO_SECURITIES:"BANK_KYOBO_SECURITIES",DAISHIN_SECURITIES:"BANK_DAISHIN_SECURITIES",MERITZ_SECURITIES:"BANK_MERITZ_SECURITIES",MIRAE_ASSET_SECURITIES:"BANK_MIRAE_ASSET_SECURITIES",BOOKOOK_SECURITIES:"BANK_BOOKOOK_SECURITIES",SAMSUNG_SECURITIES:"BANK_SAMSUNG_SECURITIES",SHINYOUNG_SECURITIES:"BANK_SHINYOUNG_SECURITIES",SHINHAN_FINANCIAL_INVESTMENT:"BANK_SHINHAN_FINANCIAL_INVESTMENT",YUANTA_SECURITIES:"BANK_YUANTA_SECURITIES",EUGENE_INVESTMENT_SECURITIES:"BANK_EUGENE_INVESTMENT_SECURITIES",KAKAO_PAY_SECURITIES:"BANK_KAKAO_PAY_SECURITIES",TOSS_SECURITIES:"BANK_TOSS_SECURITIES",KOREA_FOSS_SECURITIES:"BANK_KOREA_FOSS_SECURITIES",HANA_FINANCIAL_INVESTMENT:"BANK_HANA_FINANCIAL_INVESTMENT",HI_INVESTMENT_SECURITIES:"BANK_HI_INVESTMENT_SECURITIES",KOREA_INVESTMENT_SECURITIES:"BANK_KOREA_INVESTMENT_SECURITIES",HANWHA_INVESTMENT_SECURITIES:"BANK_HANWHA_INVESTMENT_SECURITIES",HYUNDAI_MOTOR_SECURITIES:"BANK_HYUNDAI_MOTOR_SECURITIES",DB_FINANCIAL_INVESTMENT:"BANK_DB_FINANCIAL_INVESTMENT",KB_SECURITIES:"BANK_KB_SECURITIES",KTB_INVESTMENT_SECURITIES:"BANK_KTB_INVESTMENT_SECURITIES",NH_INVESTMENT_SECURITIES:"BANK_NH_INVESTMENT_SECURITIES",SK_SECURITIES:"BANK_SK_SECURITIES",SCI:"BANK_SGI",KIWOOM_SECURITIES:"BANK_KIWOOM_SECURITIES",EBEST_INVESTMENT_SECURITIES:"BANK_EBEST_INVESTMENT_SECURITIES",CAPE_INVESTMENT_CERTIFICATE:"BANK_CAPE_INVESTMENT_CERTIFICATE"},k={CARD:"CARD",MOBILE:"MOBILE",EASY_PAY:"EASY_PAY",PAYPAL:"PAYPAL"},v={KOREA_DEVELOPMENT_BANK:"CARD_COMPANY_KOREA_DEVELOPMENT_BANK",KFCC:"CARD_COMPANY_KFCC",SHINHYUP:"CARD_COMPANY_SHINHYUP",EPOST:"CARD_COMPANY_EPOST",SAVINGS_BANK_KOREA:"CARD_COMPANY_SAVINGS_BANK_KOREA",KAKAO_BANK:"CARD_COMPANY_KAKAO_BANK",WOORI_CARD:"CARD_COMPANY_WOORI_CARD",BC_CARD:"CARD_COMPANY_BC_CARD",GWANGJU_CARD:"CARD_COMPANY_GWANGJU_CARD",SAMSUNG_CARD:"CARD_COMPANY_SAMSUNG_CARD",SHINHAN_CARD:"CARD_COMPANY_SHINHAN_CARD",HYUNDAI_CARD:"CARD_COMPANY_HYUNDAI_CARD",LOTTE_CARD:"CARD_COMPANY_LOTTE_CARD",SUHYUP_CARD:"CARD_COMPANY_SUHYUP_CARD",CITI_CARD:"CARD_COMPANY_CITI_CARD",NH_CARD:"CARD_COMPANY_NH_CARD",JEONBUK_CARD:"CARD_COMPANY_JEONBUK_CARD",JEJU_CARD:"CARD_COMPANY_JEJU_CARD",HANA_CARD:"CARD_COMPANY_HANA_CARD",KOOKMIN_CARD:"CARD_COMPANY_KOOKMIN_CARD",K_BANK:"CARD_COMPANY_K_BANK",TOSS_BANK:"CARD_COMPANY_TOSS_BANK"},h={SKT:"CARRIER_SKT",KT:"CARRIER_KT",LGU:"CARRIER_LGU",HELLO:"CARRIER_HELLO",KCT:"CARRIER_KCT",SK7:"CARRIER_SK7"},x={AF:"COUNTRY_AF",AX:"COUNTRY_AX",AL:"COUNTRY_AL",DZ:"COUNTRY_DZ",AS:"COUNTRY_AS",AD:"COUNTRY_AD",AO:"COUNTRY_AO",AI:"COUNTRY_AI",AQ:"COUNTRY_AQ",AG:"COUNTRY_AG",AR:"COUNTRY_AR",AM:"COUNTRY_AM",AW:"COUNTRY_AW",AU:"COUNTRY_AU",AT:"COUNTRY_AT",AZ:"COUNTRY_AZ",BH:"COUNTRY_BH",BS:"COUNTRY_BS",BD:"COUNTRY_BD",BB:"COUNTRY_BB",BY:"COUNTRY_BY",BE:"COUNTRY_BE",BZ:"COUNTRY_BZ",BJ:"COUNTRY_BJ",BM:"COUNTRY_BM",BT:"COUNTRY_BT",BO:"COUNTRY_BO",BQ:"COUNTRY_BQ",BA:"COUNTRY_BA",BW:"COUNTRY_BW",BV:"COUNTRY_BV",BR:"COUNTRY_BR",IO:"COUNTRY_IO",BN:"COUNTRY_BN",BG:"COUNTRY_BG",BF:"COUNTRY_BF",BI:"COUNTRY_BI",KH:"COUNTRY_KH",CM:"COUNTRY_CM",CA:"COUNTRY_CA",CV:"COUNTRY_CV",KY:"COUNTRY_KY",CF:"COUNTRY_CF",TD:"COUNTRY_TD",CL:"COUNTRY_CL",CN:"COUNTRY_CN",CX:"COUNTRY_CX",CC:"COUNTRY_CC",CO:"COUNTRY_CO",KM:"COUNTRY_KM",CG:"COUNTRY_CG",CD:"COUNTRY_CD",CK:"COUNTRY_CK",CR:"COUNTRY_CR",CI:"COUNTRY_CI",HR:"COUNTRY_HR",CU:"COUNTRY_CU",CW:"COUNTRY_CW",CY:"COUNTRY_CY",CZ:"COUNTRY_CZ",DK:"COUNTRY_DK",DJ:"COUNTRY_DJ",DM:"COUNTRY_DM",DO:"COUNTRY_DO",EC:"COUNTRY_EC",EG:"COUNTRY_EG",SV:"COUNTRY_SV",GQ:"COUNTRY_GQ",ER:"COUNTRY_ER",EE:"COUNTRY_EE",ET:"COUNTRY_ET",FK:"COUNTRY_FK",FO:"COUNTRY_FO",FJ:"COUNTRY_FJ",FI:"COUNTRY_FI",FR:"COUNTRY_FR",GF:"COUNTRY_GF",PF:"COUNTRY_PF",TF:"COUNTRY_TF",GA:"COUNTRY_GA",GM:"COUNTRY_GM",GE:"COUNTRY_GE",DE:"COUNTRY_DE",GH:"COUNTRY_GH",GI:"COUNTRY_GI",GR:"COUNTRY_GR",GL:"COUNTRY_GL",GD:"COUNTRY_GD",GP:"COUNTRY_GP",GU:"COUNTRY_GU",GT:"COUNTRY_GT",GG:"COUNTRY_GG",GN:"COUNTRY_GN",GW:"COUNTRY_GW",GY:"COUNTRY_GY",HT:"COUNTRY_HT",HM:"COUNTRY_HM",VA:"COUNTRY_VA",HN:"COUNTRY_HN",HK:"COUNTRY_HK",HU:"COUNTRY_HU",IS:"COUNTRY_IS",IN:"COUNTRY_IN",ID:"COUNTRY_ID",IR:"COUNTRY_IR",IQ:"COUNTRY_IQ",IE:"COUNTRY_IE",IM:"COUNTRY_IM",IL:"COUNTRY_IL",IT:"COUNTRY_IT",JM:"COUNTRY_JM",JP:"COUNTRY_JP",JE:"COUNTRY_JE",JO:"COUNTRY_JO",KZ:"COUNTRY_KZ",KE:"COUNTRY_KE",KI:"COUNTRY_KI",KP:"COUNTRY_KP",KR:"COUNTRY_KR",KW:"COUNTRY_KW",KG:"COUNTRY_KG",LA:"COUNTRY_LA",LV:"COUNTRY_LV",LB:"COUNTRY_LB",LS:"COUNTRY_LS",LR:"COUNTRY_LR",LY:"COUNTRY_LY",LI:"COUNTRY_LI",LT:"COUNTRY_LT",LU:"COUNTRY_LU",MO:"COUNTRY_MO",MK:"COUNTRY_MK",MG:"COUNTRY_MG",MW:"COUNTRY_MW",MY:"COUNTRY_MY",MV:"COUNTRY_MV",ML:"COUNTRY_ML",MT:"COUNTRY_MT",MH:"COUNTRY_MH",MQ:"COUNTRY_MQ",MR:"COUNTRY_MR",MU:"COUNTRY_MU",YT:"COUNTRY_YT",MX:"COUNTRY_MX",FM:"COUNTRY_FM",MD:"COUNTRY_MD",MC:"COUNTRY_MC",MN:"COUNTRY_MN",ME:"COUNTRY_ME",MS:"COUNTRY_MS",MA:"COUNTRY_MA",MZ:"COUNTRY_MZ",MM:"COUNTRY_MM",NA:"COUNTRY_NA",NR:"COUNTRY_NR",NP:"COUNTRY_NP",NL:"COUNTRY_NL",NC:"COUNTRY_NC",NZ:"COUNTRY_NZ",NI:"COUNTRY_NI",NE:"COUNTRY_NE",NG:"COUNTRY_NG",NU:"COUNTRY_NU",NF:"COUNTRY_NF",MP:"COUNTRY_MP",NO:"COUNTRY_NO",OM:"COUNTRY_OM",PK:"COUNTRY_PK",PW:"COUNTRY_PW",PS:"COUNTRY_PS",PA:"COUNTRY_PA",PG:"COUNTRY_PG",PY:"COUNTRY_PY",PE:"COUNTRY_PE",PH:"COUNTRY_PH",PN:"COUNTRY_PN",PL:"COUNTRY_PL",PT:"COUNTRY_PT",PR:"COUNTRY_PR",QA:"COUNTRY_QA",RE:"COUNTRY_RE",RO:"COUNTRY_RO",RU:"COUNTRY_RU",RW:"COUNTRY_RW",BL:"COUNTRY_BL",SH:"COUNTRY_SH",KN:"COUNTRY_KN",LC:"COUNTRY_LC",MF:"COUNTRY_MF",PM:"COUNTRY_PM",VC:"COUNTRY_VC",WS:"COUNTRY_WS",SM:"COUNTRY_SM",ST:"COUNTRY_ST",SA:"COUNTRY_SA",SN:"COUNTRY_SN",RS:"COUNTRY_RS",SC:"COUNTRY_SC",SL:"COUNTRY_SL",SG:"COUNTRY_SG",SX:"COUNTRY_SX",SK:"COUNTRY_SK",SI:"COUNTRY_SI",SB:"COUNTRY_SB",SO:"COUNTRY_SO",ZA:"COUNTRY_ZA",GS:"COUNTRY_GS",SS:"COUNTRY_SS",ES:"COUNTRY_ES",LK:"COUNTRY_LK",SD:"COUNTRY_SD",SR:"COUNTRY_SR",SJ:"COUNTRY_SJ",SZ:"COUNTRY_SZ",SE:"COUNTRY_SE",CH:"COUNTRY_CH",SY:"COUNTRY_SY",TW:"COUNTRY_TW",TJ:"COUNTRY_TJ",TZ:"COUNTRY_TZ",TH:"COUNTRY_TH",TL:"COUNTRY_TL",TG:"COUNTRY_TG",TK:"COUNTRY_TK",TO:"COUNTRY_TO",TT:"COUNTRY_TT",TN:"COUNTRY_TN",TR:"COUNTRY_TR",TM:"COUNTRY_TM",TC:"COUNTRY_TC",TV:"COUNTRY_TV",UG:"COUNTRY_UG",UA:"COUNTRY_UA",AE:"COUNTRY_AE",GB:"COUNTRY_GB",US:"COUNTRY_US",UM:"COUNTRY_UM",UY:"COUNTRY_UY",UZ:"COUNTRY_UZ",VU:"COUNTRY_VU",VE:"COUNTRY_VE",VN:"COUNTRY_VN",VG:"COUNTRY_VG",VI:"COUNTRY_VI",WF:"COUNTRY_WF",EH:"COUNTRY_EH",YE:"COUNTRY_YE",ZM:"COUNTRY_ZM",ZW:"COUNTRY_ZW"},b={KRW:"CURRENCY_KRW",USD:"CURRENCY_USD",EUR:"CURRENCY_EUR",JPY:"CURRENCY_JPY",CNY:"CURRENCY_CNY",VND:"CURRENCY_VND",THB:"CURRENCY_THB",SGD:"CURRENCY_SGD",AUD:"CURRENCY_AUD",HKD:"CURRENCY_HKD",AED:"CURRENCY_AED",AFN:"CURRENCY_AFN",ALL:"CURRENCY_ALL",AMD:"CURRENCY_AMD",ANG:"CURRENCY_ANG",AOA:"CURRENCY_AOA",ARS:"CURRENCY_ARS",AWG:"CURRENCY_AWG",AZN:"CURRENCY_AZN",BAM:"CURRENCY_BAM",BBD:"CURRENCY_BBD",BDT:"CURRENCY_BDT",BGN:"CURRENCY_BGN",BHD:"CURRENCY_BHD",BIF:"CURRENCY_BIF",BMD:"CURRENCY_BMD",BND:"CURRENCY_BND",BOB:"CURRENCY_BOB",BOV:"CURRENCY_BOV",BRL:"CURRENCY_BRL",BSD:"CURRENCY_BSD",BTN:"CURRENCY_BTN",BWP:"CURRENCY_BWP",BYN:"CURRENCY_BYN",BZD:"CURRENCY_BZD",CAD:"CURRENCY_CAD",CDF:"CURRENCY_CDF",CHE:"CURRENCY_CHE",CHF:"CURRENCY_CHF",CHW:"CURRENCY_CHW",CLF:"CURRENCY_CLF",CLP:"CURRENCY_CLP",COP:"CURRENCY_COP",COU:"CURRENCY_COU",CRC:"CURRENCY_CRC",CUC:"CURRENCY_CUC",CUP:"CURRENCY_CUP",CVE:"CURRENCY_CVE",CZK:"CURRENCY_CZK",DJF:"CURRENCY_DJF",DKK:"CURRENCY_DKK",DOP:"CURRENCY_DOP",DZD:"CURRENCY_DZD",EGP:"CURRENCY_EGP",ERN:"CURRENCY_ERN",ETB:"CURRENCY_ETB",FJD:"CURRENCY_FJD",FKP:"CURRENCY_FKP",GBP:"CURRENCY_GBP",GEL:"CURRENCY_GEL",GHS:"CURRENCY_GHS",GIP:"CURRENCY_GIP",GMD:"CURRENCY_GMD",GNF:"CURRENCY_GNF",GTQ:"CURRENCY_GTQ",GYD:"CURRENCY_GYD",HNL:"CURRENCY_HNL",HRK:"CURRENCY_HRK",HTG:"CURRENCY_HTG",HUF:"CURRENCY_HUF",IDR:"CURRENCY_IDR",ILS:"CURRENCY_ILS",INR:"CURRENCY_INR",IQD:"CURRENCY_IQD",IRR:"CURRENCY_IRR",ISK:"CURRENCY_ISK",JMD:"CURRENCY_JMD",JOD:"CURRENCY_JOD",KES:"CURRENCY_KES",KGS:"CURRENCY_KGS",KHR:"CURRENCY_KHR",KMF:"CURRENCY_KMF",KPW:"CURRENCY_KPW",KWD:"CURRENCY_KWD",KYD:"CURRENCY_KYD",KZT:"CURRENCY_KZT",LAK:"CURRENCY_LAK",LBP:"CURRENCY_LBP",LKR:"CURRENCY_LKR",LRD:"CURRENCY_LRD",LSL:"CURRENCY_LSL",LYD:"CURRENCY_LYD",MAD:"CURRENCY_MAD",MDL:"CURRENCY_MDL",MGA:"CURRENCY_MGA",MKD:"CURRENCY_MKD",MMK:"CURRENCY_MMK",MNT:"CURRENCY_MNT",MOP:"CURRENCY_MOP",MRU:"CURRENCY_MRU",MUR:"CURRENCY_MUR",MVR:"CURRENCY_MVR",MWK:"CURRENCY_MWK",MXN:"CURRENCY_MXN",MXV:"CURRENCY_MXV",MYR:"CURRENCY_MYR",MZN:"CURRENCY_MZN",NAD:"CURRENCY_NAD",NGN:"CURRENCY_NGN",NIO:"CURRENCY_NIO",NOK:"CURRENCY_NOK",NPR:"CURRENCY_NPR",NZD:"CURRENCY_NZD",OMR:"CURRENCY_OMR",PAB:"CURRENCY_PAB",PEN:"CURRENCY_PEN",PGK:"CURRENCY_PGK",PHP:"CURRENCY_PHP",PKR:"CURRENCY_PKR",PLN:"CURRENCY_PLN",PYG:"CURRENCY_PYG",QAR:"CURRENCY_QAR",RON:"CURRENCY_RON",RSD:"CURRENCY_RSD",RUB:"CURRENCY_RUB",RWF:"CURRENCY_RWF",SAR:"CURRENCY_SAR",SBD:"CURRENCY_SBD",SCR:"CURRENCY_SCR",SDG:"CURRENCY_SDG",SEK:"CURRENCY_SEK",SHP:"CURRENCY_SHP",SLE:"CURRENCY_SLE",SLL:"CURRENCY_SLL",SOS:"CURRENCY_SOS",SRD:"CURRENCY_SRD",SSP:"CURRENCY_SSP",STN:"CURRENCY_STN",SVC:"CURRENCY_SVC",SYP:"CURRENCY_SYP",SZL:"CURRENCY_SZL",TJS:"CURRENCY_TJS",TMT:"CURRENCY_TMT",TND:"CURRENCY_TND",TOP:"CURRENCY_TOP",TRY:"CURRENCY_TRY",TTD:"CURRENCY_TTD",TWD:"CURRENCY_TWD",TZS:"CURRENCY_TZS",UAH:"CURRENCY_UAH",UGX:"CURRENCY_UGX",USN:"CURRENCY_USN",UYI:"CURRENCY_UYI",UYU:"CURRENCY_UYU",UYW:"CURRENCY_UYW",UZS:"CURRENCY_UZS",VED:"CURRENCY_VED",VES:"CURRENCY_VES",VUV:"CURRENCY_VUV",WST:"CURRENCY_WST",XAF:"CURRENCY_XAF",XAG:"CURRENCY_XAG",XAU:"CURRENCY_XAU",XBA:"CURRENCY_XBA",XBB:"CURRENCY_XBB",XBC:"CURRENCY_XBC",XBD:"CURRENCY_XBD",XCD:"CURRENCY_XCD",XDR:"CURRENCY_XDR",XOF:"CURRENCY_XOF",XPD:"CURRENCY_XPD",XPF:"CURRENCY_XPF",XPT:"CURRENCY_XPT",XSU:"CURRENCY_XSU",XTS:"CURRENCY_XTS",XUA:"CURRENCY_XUA",XXX:"CURRENCY_XXX",YER:"CURRENCY_YER",ZAR:"CURRENCY_ZAR",ZMW:"CURRENCY_ZMW",ZWL:"CURRENCY_ZWL"},W={PAYCO:"EASY_PAY_PROVIDER_PAYCO",SAMSUNGPAY:"EASY_PAY_PROVIDER_SAMSUNGPAY",SSGPAY:"EASY_PAY_PROVIDER_SSGPAY",KAKAOPAY:"EASY_PAY_PROVIDER_KAKAOPAY",NAVERPAY:"EASY_PAY_PROVIDER_NAVERPAY",CHAI:"EASY_PAY_PROVIDER_CHAI",LPAY:"EASY_PAY_PROVIDER_LPAY",KPAY:"EASY_PAY_PROVIDER_KPAY",TOSSPAY:"EASY_PAY_PROVIDER_TOSSPAY",LGPAY:"EASY_PAY_PROVIDER_LGPAY",APPLEPAY:"EASY_PAY_PROVIDER_APPLEPAY",PINPAY:"EASY_PAY_PROVIDER_PINPAY",SKPAY:"EASY_PAY_PROVIDER_SKPAY",NAVERPAY_CARD:"EASY_PAY_PROVIDER_NAVERPAY_CARD",NAVERPAY_POINT:"EASY_PAY_PROVIDER_NAVERPAY_POINT",SSGPAY_POINT:"EASY_PAY_PROVIDER_SSGPAY_POINT",SSGPAY_BANK:"EASY_PAY_PROVIDER_SSGPAY_BANK",TOSS_BRANDPAY:"EASY_PAY_PROVIDER_TOSS_BRANDPAY"},Z={MALE:"GENDER_MALE",FEMALE:"GENDER_FEMALE",OTHER:"GENDER_OTHER"},j={BOOKNLIFE:"GIFT_CERTIFICATE_TYPE_BOOKNLIFE",SMART_MUNSANG:"GIFT_CERTIFICATE_TYPE_SMART_MUNSANG",CULTURELAND:"GIFT_CERTIFICATE_TYPE_CULTURELAND",HAPPYMONEY:"GIFT_CERTIFICATE_TYPE_HAPPYMONEY"},J={KO_KR:"KO_KR",EN_US:"EN_US",ZH_CN:"ZH_CN"},X={HTML5_INICIS:"PG_PROVIDER_HTML5_INICIS",PAYPAL:"PG_PROVIDER_PAYPAL",INICIS:"PG_PROVIDER_INICIS",DANAL:"PG_PROVIDER_DANAL",NICE:"PG_PROVIDER_NICE",DANAL_TPAY:"PG_PROVIDER_DANAL_TPAY",JTNET:"PG_PROVIDER_JTNET",UPLUS:"PG_PROVIDER_UPLUS",NAVERPAY:"PG_PROVIDER_NAVERPAY",KAKAO:"PG_PROVIDER_KAKAO",SETTLE:"PG_PROVIDER_SETTLE",KCP:"PG_PROVIDER_KCP",MOBILIANS:"PG_PROVIDER_MOBILIANS",KAKAOPAY:"PG_PROVIDER_KAKAOPAY",NAVERCO:"PG_PROVIDER_NAVERCO",SYRUP:"PG_PROVIDER_SYRUP",KICC:"PG_PROVIDER_KICC",EXIMBAY:"PG_PROVIDER_EXIMBAY",SMILEPAY:"PG_PROVIDER_SMILEPAY",PAYCO:"PG_PROVIDER_PAYCO",KCP_BILLING:"PG_PROVIDER_KCP_BILLING",ALIPAY:"PG_PROVIDER_ALIPAY",PAYPLE:"PG_PROVIDER_PAYPLE",CHAI:"PG_PROVIDER_CHAI",BLUEWALNUT:"PG_PROVIDER_BLUEWALNUT",SMARTRO:"PG_PROVIDER_SMARTRO",PAYMENTWALL:"PG_PROVIDER_PAYMENTWALL",TOSSPAYMENTS:"PG_PROVIDER_TOSSPAYMENTS",KCP_QUICK:"PG_PROVIDER_KCP_QUICK",DAOU:"PG_PROVIDER_DAOU",GALAXIA:"PG_PROVIDER_GALAXIA",TOSSPAY:"PG_PROVIDER_TOSSPAY",KCP_DIRECT:"PG_PROVIDER_KCP_DIRECT",SETTLE_ACC:"PG_PROVIDER_SETTLE_ACC",SETTLE_FIRM:"PG_PROVIDER_SETTLE_FIRM",INICIS_UNIFIED:"PG_PROVIDER_INICIS_UNIFIED",KSNET:"PG_PROVIDER_KSNET",PAYPAL_V2:"PG_PROVIDER_PAYPAL_V2",SMARTRO_V2:"PG_PROVIDER_SMARTRO_V2",NICE_V2:"PG_PROVIDER_NICE_V2",TOSS_BRANDPAY:"PG_PROVIDER_TOSS_BRANDPAY"},q={IFRAME:"IFRAME",POPUP:"POPUP",REDIRECTION:"REDIRECTION",UI:"UI"};var N={};l(N,{IdentityVerificationError:()=>m,IssueBillingKeyError:()=>K,PaymentError:()=>d,PrepareException:()=>Q,isIdentityVerificationError:()=>f,isIssueBillingKeyError:()=>g,isPaymentError:()=>u,isPortOneError:()=>D});var B=class extends Error{constructor({code:r,message:e,txId:i,paymentId:t}){var _temp;_temp=super(e),_defineProperty(this,"response",void 0),_temp,this.response={data:{code:r,message:e,txId:i,paymentId:t}}}},Q=B;function f(_){return D(_)&&_.__portOneErrorType==="IdentityVerificationError"}var m=class extends Error{constructor({code:r,message:e,identityVerificationId:i,identityVerificationTxId:t}){super(e),this.__portOneErrorType="IdentityVerificationError",this.transactionType=Y.IDENTITY_VERIFICATION,this.code=r,this.message=e,this.identityVerificationId=i,this.identityVerificationTxId=t}};function g(_){return D(_)&&_.__portOneErrorType==="IssueBillingKeyError"}var K=class extends Error{constructor({code:r,message:e,billingKey:i}){super(e),this.__portOneErrorType="IssueBillingKeyError",this.transactionType=Y.ISSUE_BILLING_KEY,this.code=r,this.message=e,this.billingKey=i}};function u(_){return D(_)&&_.__portOneErrorType==="PaymentError"}var d=class extends Error{constructor({code:r,message:e,txId:i,paymentId:t}){super(e),this.__portOneErrorType="PaymentError",this.transactionType=Y.PAYMENT,this.code=r,this.message=e,this.txId=i,this.paymentId=t}};function D(_){return _!=null&&typeof _=="object"&&"__portOneErrorType"in _&&typeof _.__portOneErrorType=="string"}async function V(_){let{pgProvider:r,storeId:e,txId:i,paymentId:t,pgCode:s,pgMessage:R,message:E}=_;try{let n=await fetch(`${a.CHECKOUT_SERVER}/api/fail/${r}/v2`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({storeId:e,txId:i,paymentId:t,pgCode:s,pgMessage:R,message:E,isDirectReturn:!0})});if(!n.ok){let I=await n.text(),A="UnknownError",U=`\uACB0\uC81C \uC2E4\uD328 \uCC98\uB9AC \uACFC\uC815\uC5D0\uC11C \uBB38\uC81C\uAC00 \uBC1C\uC0DD\uD558\uC600\uC2B5\uB2C8\uB2E4. ${I}`;try{let L=JSON.parse(I);A=L.code,U=L.message}catch{}throw new N.PaymentError({code:A,message:U,txId:i,paymentId:t})}let{redirectUrl:o}=await n.json(),T=new URL(o,a.CHECKOUT_SERVER);return{transactionType:"PAYMENT",txId:T.searchParams.get("txId")||i,paymentId:T.searchParams.get("paymentId")||t,code:T.searchParams.get("code")||"UnknownError",message:T.searchParams.get("message")||E}}catch(n){if(n instanceof N.PaymentError)throw n;let{code:o,message:T}=n.response?.data||{code:"UnknownError",message:n.message};throw new N.PaymentError({code:o,message:T,txId:i,paymentId:t})}}var p={};l(p,{ActionType:()=>z,Bank:()=>w,BillingKeyMethod:()=>k,CardCompany:()=>v,Carrier:()=>h,Country:()=>x,Currency:()=>b,EasyPayProvider:()=>W,FailureType:()=>$,Gender:()=>Z,GiftCertificateType:()=>j,IdentityVerificationStatus:()=>ee,IssueBillingKeyStatus:()=>te,Locale:()=>J,PaymentStatus:()=>re,PgProvider:()=>X,TransactionType:()=>Y,WindowType:()=>q});var Ce={REQUEST_PAY:"REQUEST_PAY",LOAD_UI:"LOAD_UI",ISSUE_BILLING_KEY:"ISSUE_BILLING_KEY"},z=Ce;var Ae={UNSPECIFIED:"FAILURE_TYPE_UNSPECIFIED",INITIALIZE_FAILED_NO_CANDIDATE_CHANNEL:"FAILURE_TYPE_INITIALIZE_FAILED_NO_CANDIDATE_CHANNEL",INITIALIZE_FAILED_FETCHING_CHANNELS_FAILED:"FAILURE_TYPE_INITIALIZE_FAILED_FETCHING_CHANNELS_FAILED",PREPARE_FAILED_NO_SATISFIED_CHANNEL:"FAILURE_TYPE_PREPARE_FAILED_NO_SATISFIED_CHANNEL",PREPARE_FAILED_TGS_PREPARE_FAILED:"FAILURE_TYPE_PREPARE_FAILED_TGS_PREPARE_FAILED",STORE_VALIDATION_FAILED:"FAILURE_TYPE_STORE_VALIDATION_FAILED",CHANNEL_VALIDATION_FAILED:"FAILURE_TYPE_CHANNEL_VALIDATION_FAILED",CONFIRM_PROCESS_FAILED:"FAILURE_TYPE_CONFIRM_PROCESS_FAILED",AUTHENTICATION_FAILED:"FAILURE_TYPE_AUTHENTICATION_FAILED",FORGERY_CHECK_FAILED:"FAILURE_TYPE_FORGERY_CHECK_FAILED",APPROVE_FAILED_TGS_APPROVE_FAILED:"FAILURE_TYPE_APPROVE_FAILED_TGS_APPROVE_FAILED",ISSUE_VIRTUAL_ACCOUNT_FAILED:"FAILURE_TYPE_ISSUE_VIRTUAL_ACCOUNT_FAILED",STOPPED:"FAILURE_TYPE_STOPPED",BILLING_KEY_TGS_PAY_FAILED:"FAILURE_TYPE_BILLING_KEY_TGS_PAY_FAILED",INSTANT_TGS_PAY_FAILED:"FAILURE_TYPE_INSTANT_TGS_PAY_FAILED"},$=Ae;var Te={STATUS_UNSPECIFIED:"STATUS_UNSPECIFIED",STATUS_PREPARED:"STATUS_PREPARED",STATUS_FAILED:"STATUS_FAILED",STATUS_VERIFIED:"STATUS_VERIFIED"},ee=Te;var Ie={STATUS_UNSPECIFIED:"STATUS_UNSPECIFIED",STATUS_PREPARED:"STATUS_PREPARED",STATUS_FAILED:"STATUS_FAILED",STATUS_APPROVED:"STATUS_APPROVED"},te=Ie;var Ue={STATUS_UNSPECIFIED:"STATUS_UNSPECIFIED",STATUS_INITIALIZED:"STATUS_INITIALIZED",STATUS_PREPARED:"STATUS_PREPARED",STATUS_FAILED:"STATUS_FAILED",STATUS_STOPPED:"STATUS_STOPPED",STATUS_APPROVED:"STATUS_APPROVED",STATUS_PARTIAL_CANCELLED:"STATUS_PARTIAL_CANCELLED",STATUS_CANCELLED:"STATUS_CANCELLED",STATUS_VIRTUAL_ACCOUNT_ISSUED:"STATUS_VIRTUAL_ACCOUNT_ISSUED"},re=Ue;var C={};l(C,{IdentityVerificationError:()=>m,IssueBillingKeyError:()=>K,PaymentError:()=>d,PrepareException:()=>_e,isIdentityVerificationError:()=>f,isIssueBillingKeyError:()=>g,isPaymentError:()=>u,isPortOneError:()=>D});function Se(_,r,e){return r in _?Object.defineProperty(_,r,{value:e,enumerable:!0,configurable:!0,writable:!0}):_[r]=e,_}var M=class extends Error{constructor({code:r,message:e,txId:i,paymentId:t}){super(e),Se(this,"response",void 0),this.response={data:{code:r,message:e,txId:i,paymentId:t}}}},_e=M;async function Re(_,r,e){try{let i=new URL(`${a.CHECKOUT_SERVER}/api/status/v2`);i.searchParams.append("storeId",_),i.searchParams.append("paymentId",r),i.searchParams.append("txId",e);let t=await fetch(i);if(!t.ok){let s=await t.text(),R="UnknownError",E=`\uACB0\uC81C \uACB0\uACFC \uD655\uC778 \uACFC\uC815\uC5D0\uC11C \uBB38\uC81C\uAC00 \uBC1C\uC0DD\uD558\uC600\uC2B5\uB2C8\uB2E4. ${s}`;try{let n=JSON.parse(s);R=n.code,E=n.message}catch{}throw new N.PaymentError({code:R,message:E,txId:e,paymentId:r})}return t.json()}catch(i){throw i instanceof N.PaymentError?i:new N.PaymentError({code:"UnknownError",message:i.message||"결제 결과 확인 과정에서 문제가 발생하였습니다.",txId:e,paymentId:r})}}async function Oe(_){if(!_)throw new C.PaymentError({code:"BadRequest",message:"결제요청 파라메터가 누락되었습니다."});try{let r=await fetch(`${a.CHECKOUT_SERVER}/api/prepare/v2`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({data:{..._,sdkVersion:a.SDK_VERSION}})});if(!r.ok){let t=await r.text(),{code:s,message:R}=(()=>{try{return JSON.parse(t)}catch{return{code:"UnknownError",message:`\uACB0\uC81C \uCC3D \uD638\uCD9C\uC5D0 \uC2E4\uD328\uD558\uC600\uC2B5\uB2C8\uB2E4. ${t}`}}})();throw new C.PaymentError({code:s,message:R})}let e=await r.json();if(!e)throw new C.PaymentError({code:"UnknownError",message:"결제 창 호출에 필요한 데이터를 전달하는 과정에서 알 수 없는 문제가 발생하였습니다."});let i=c({pgProvider:e.pgProvider,transactionType:e.transactionType,windowType:e.windowType});return await y(i),await O[i].onAfterInitialize?.({slots:a,driverManifest:S,initializeOrPrepareResponse:e}),await new Promise((t,s)=>{O[i].onAfterPrepare?.({slots:a,driverManifest:S,prepareResponse:e},{onTransactionFail:async(R,E)=>{if(R===p.TransactionType.PAYMENT&&!("billingKey"in E)&&!("identityVerificationTxId"in E)){let n=await V(E);t(n)}else t({transactionType:"PAYMENT",txId:e.txId,paymentId:e.paymentId,code:"UnknownError",message:"올바르지 않은 결제 결과가 반환되었습니다."})},onTransactionOver:async(R,E)=>{await P(),R===p.TransactionType.PAYMENT&&"txId"in E?t(E):s(new C.PaymentError({code:"UnknownError",message:"올바르지 않은 결제 결과가 반환되었습니다."}))},onForceClose:async()=>{let R={transactionType:"PAYMENT",txId:e.txId,paymentId:e.paymentId};try{let E=await Re(e.storeId,e.paymentId,e.txId),{status:n}=E;switch(n){case"STATUS_APPROVED":case"STATUS_VIRTUAL_ACCOUNT_ISSUED":{t(R);break}case"STATUS_FAILED":{let{failure:o}=E,{code:T,message:I}=(()=>{if(o){let{pgCode:A,pgMessage:U}=o;if(U)return{code:"PG_PROVIDER_ERROR",message:A?`[${A}] ${U}`:U}}return{code:"PORTONE_ERROR",message:o?.message||"결제에 실패하였습니다."}})();t({...R,code:T,message:I});break}case"STATUS_PREPARED":{let o=await V({...e,message:"사용자가 결제를 취소하였습니다."});t(o);break}default:{t({...R,code:"UnknownError",message:"해당 결제 건의 상태 오류로 인해 요청을 처리할 수 없습니다."});break}}}catch(E){t({...R,code:E.code||"UnknownError",message:`\uACB0\uC81C \uD31D\uC5C5 \uC885\uB8CC \uD6C4 \uC11C\uBC84\uC640 \uD1B5\uC2E0\uD558\uB294 \uACFC\uC815\uC5D0\uC11C \uC624\uB958\uAC00 \uBC1C\uC0DD\uD558\uC600\uC2B5\uB2C8\uB2E4. ${E.message}`})}}})})}catch(r){throw await P(),r instanceof C.PaymentError?r:new C.PaymentError({code:"UnknownError",message:`\uACB0\uC81C \uCC3D \uD638\uCD9C\uC5D0 \uC2E4\uD328\uD558\uC600\uC2B5\uB2C8\uB2E4. ${r.message}`})}}async function F(_){let{pgProvider:r,billingKey:e,pgCode:i,pgMessage:t,message:s}=_;try{let R=await fetch(`${a.CHECKOUT_SERVER}/api/issue-fail/${r}/v2`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({billingKey:e,pgCode:i,pgMessage:t,message:s,isDirectReturn:!0})});if(!R.ok){let o=await R.text(),T="UnknownError",I=`\uBE4C\uB9C1\uD0A4 \uBC1C\uAE09 \uC2E4\uD328 \uCC98\uB9AC \uACFC\uC815\uC5D0\uC11C \uBB38\uC81C\uAC00 \uBC1C\uC0DD\uD558\uC600\uC2B5\uB2C8\uB2E4. ${o}`;try{let A=JSON.parse(o);T=A.code,I=A.message}catch{}throw new N.IssueBillingKeyError({code:T,message:I,billingKey:e})}let{redirectUrl:E}=await R.json(),n=new URL(E,a.CHECKOUT_SERVER);return{transactionType:"ISSUE_BILLING_KEY",billingKey:n.searchParams.get("billingKey")||e,code:n.searchParams.get("code")||"UnknownError",message:n.searchParams.get("message")||s}}catch(R){if(R instanceof N.IssueBillingKeyError)throw R;let{code:E,message:n}=R.response?.data||{code:"UnknownError",message:R.message};throw new N.IssueBillingKeyError({code:E,message:n,billingKey:e})}}async function ie(_){try{let r=new URL(`${a.CHECKOUT_SERVER}/api/issue-status/v2`);r.searchParams.append("billingKey",_);let e=await fetch(r);if(!e.ok){let i=await e.text(),t="UnknownError",s=`\uBE4C\uB9C1\uD0A4 \uBC1C\uAE09 \uACB0\uACFC \uD655\uC778 \uACFC\uC815\uC5D0\uC11C \uBB38\uC81C\uAC00 \uBC1C\uC0DD\uD558\uC600\uC2B5\uB2C8\uB2E4. ${i}`;try{let R=JSON.parse(i);t=R.code,s=R.message}catch{}throw new N.IssueBillingKeyError({code:t,message:s,billingKey:_})}return e.json()}catch(r){throw r instanceof N.IssueBillingKeyError?r:new N.IssueBillingKeyError({code:"UnknownError",message:r.message||"빌링키 발급 결과 확인 과정에서 문제가 발생하였습니다.",billingKey:_})}}async function pe(_){if(!_)throw new C.IssueBillingKeyError({code:"BadRequest",message:"빌링키 발급 요청 파라메터가 누락되었습니다."});try{let r=await fetch(`${a.CHECKOUT_SERVER}/api/issue-prepare/v2`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({data:{..._,sdkVersion:a.SDK_VERSION}})});if(!r.ok){let t=await r.text(),{code:s,message:R}=(()=>{try{return JSON.parse(t)}catch{return{code:"UnknownError",message:`\uBE4C\uB9C1\uD0A4 \uBC1C\uAE09 \uCC3D \uD638\uCD9C\uC5D0 \uC2E4\uD328\uD558\uC600\uC2B5\uB2C8\uB2E4. ${t}`}}})();throw new C.IssueBillingKeyError({code:s,message:R})}let e=await r.json();if(!e)throw new Error("빌링키 발급 창 호출에 필요한 데이터가 전달되지 않았습니다.");let i=c({pgProvider:e.pgProvider,transactionType:e.transactionType,windowType:e.windowType});return await y(i),await O[i].onAfterInitialize?.({slots:a,driverManifest:S,initializeOrPrepareResponse:e}),await new Promise((t,s)=>{O[i].onAfterPrepare?.({slots:a,driverManifest:S,prepareResponse:e},{onTransactionFail:async(R,E)=>{if(R===p.TransactionType.ISSUE_BILLING_KEY&&"billingKey"in E){let n=await F(E);t(n)}else t({transactionType:"ISSUE_BILLING_KEY",billingKey:e.billingKey,code:"UnknownError",message:"올바르지 않은 빌링키 발급 결과가 반환되었습니다."})},onTransactionOver:async(R,E)=>{await P(),R===p.TransactionType.ISSUE_BILLING_KEY&&"billingKey"in E?t(E):s(new C.IssueBillingKeyError({code:"UnknownError",message:"올바르지 않은 빌링키 발급 결과가 반환되었습니다."}))},onForceClose:async()=>{let R={transactionType:"ISSUE_BILLING_KEY",billingKey:e.billingKey};try{let E=await ie(e.billingKey),{status:n}=E;switch(n){case"STATUS_APPROVED":{t(R);break}case"STATUS_FAILED":{let{failure:o}=E,{code:T,message:I}=(()=>{if(o){let{pgCode:A,pgMessage:U}=o;if(U)return{code:"PG_PROVIDER_ERROR",message:A?`[${A}] ${U}`:U}}return{code:"PORTONE_ERROR",message:o?.message||"빌링키 발급에 실패하였습니다."}})();t({...R,code:T,message:I});break}case"STATUS_PREPARED":{let o=await F({pgProvider:e.pgProvider,billingKey:e.billingKey,message:"사용자가 빌링키 발급을 취소하였습니다."});t(o);break}default:{t({...R,code:"UnknownError",message:"해당 빌링키 발급 건의 상태 오류로 인해 요청을 처리할 수 없습니다."});break}}}catch(E){t({...R,code:E.code||"UnknownError",message:`\uBE4C\uB9C1\uD0A4 \uD31D\uC5C5 \uC885\uB8CC \uD6C4 \uC11C\uBC84\uC640 \uD1B5\uC2E0\uD558\uB294 \uACFC\uC815\uC5D0\uC11C \uC624\uB958\uAC00 \uBC1C\uC0DD\uD558\uC600\uC2B5\uB2C8\uB2E4. ${E.message}`})}}})})}catch(r){throw await P(),r instanceof C.IssueBillingKeyError?r:new C.IssueBillingKeyError({code:"UnknownError",message:`\uBE4C\uB9C1\uD0A4 \uBC1C\uAE09 \uCC3D \uD638\uCD9C\uC5D0 \uC2E4\uD328\uD558\uC600\uC2B5\uB2C8\uB2E4. ${r.message}`})}}async function G(_){let{pgProvider:r,identityVerificationId:e,storeId:i,identityVerificationTxId:t,message:s}=_;try{let R=await fetch(`${a.CHECKOUT_SERVER}/api/identity-verification-fail/${r}/v2`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({identityVerificationId:e,storeId:i,identityVerificationTxId:t,message:s,redirectUrl:_.redirectUrl,isDirectReturn:!0})});if(!R.ok){let o=await R.text(),T="UnknownError",I=`\uBCF8\uC778\uC778\uC99D \uC2E4\uD328 \uCC98\uB9AC \uACFC\uC815\uC5D0\uC11C \uBB38\uC81C\uAC00 \uBC1C\uC0DD\uD558\uC600\uC2B5\uB2C8\uB2E4. ${o}`;try{let A=JSON.parse(o);T=A.code,I=A.message}catch{}throw new N.IdentityVerificationError({code:T,message:I,identityVerificationId:e,identityVerificationTxId:t})}let{redirectUrl:E}=await R.json(),n=new URL(E,a.CHECKOUT_SERVER);return{transactionType:"IDENTITY_VERIFICATION",identityVerificationTxId:n.searchParams.get("identityVerificationTxId")||t,identityVerificationId:n.searchParams.get("identityVerificationId")||e,code:n.searchParams.get("code")||"UnknownError",message:n.searchParams.get("message")||s}}catch(R){if(R instanceof N.IdentityVerificationError)throw R;let{code:E,message:n}=R.response?.data||{code:"UnknownError",message:R.message};throw new N.IdentityVerificationError({code:E,message:n,identityVerificationId:e,identityVerificationTxId:t})}}async function Ee(_,r,e){try{let i=new URL(`${a.CHECKOUT_SERVER}/api/identity-verification-status/v2`);i.searchParams.append("storeId",_),i.searchParams.append("identityVerificationId",r),i.searchParams.append("identityVerificationTxId",e);let t=await fetch(i);if(!t.ok){let s=await t.text(),R="UnknownError",E=`\uBCF8\uC778\uC778\uC99D \uACB0\uACFC \uD655\uC778 \uACFC\uC815\uC5D0\uC11C \uBB38\uC81C\uAC00 \uBC1C\uC0DD\uD558\uC600\uC2B5\uB2C8\uB2E4. ${s}`;try{let n=JSON.parse(s);R=n.code,E=n.message}catch{}throw new N.IdentityVerificationError({code:R,message:E,identityVerificationId:r,identityVerificationTxId:e})}return t.json()}catch(i){throw i instanceof N.IdentityVerificationError?i:new N.IdentityVerificationError({code:"UnknownError",message:i.message||"본인인증 결과 확인 과정에서 문제가 발생하였습니다.",identityVerificationId:r,identityVerificationTxId:e})}}async function Pe(_){if(!_)throw new C.IdentityVerificationError({code:"BadRequest",message:"본인인증 요청 파라메터가 누락되었습니다."});try{let r=await fetch(`${a.CHECKOUT_SERVER}/api/identity-verification-prepare/v2`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({data:{..._,sdkVersion:a.SDK_VERSION}})});if(!r.ok){let t=await r.text(),{code:s,message:R}=(()=>{try{return JSON.parse(t)}catch{return{code:"UnknownError",message:`\uBCF8\uC778\uC778\uC99D \uCC3D \uD638\uCD9C\uC5D0 \uC2E4\uD328\uD558\uC600\uC2B5\uB2C8\uB2E4. ${t}`}}})();throw new C.IdentityVerificationError({code:s,message:R})}let e=await r.json();if(!e)throw new Error("본인인증 창 호출에 필요한 데이터가 전달되지 않았습니다.");let i=c({pgProvider:e.pgProvider,transactionType:e.transactionType,windowType:e.windowType});return await y(i),await O[i].onAfterInitialize?.({slots:a,driverManifest:S,initializeOrPrepareResponse:e}),await new Promise((t,s)=>{O[i].onAfterPrepare?.({slots:a,driverManifest:S,prepareResponse:e},{onTransactionFail:async(R,E)=>{if(R===p.TransactionType.IDENTITY_VERIFICATION&&!("txId"in E)&&!("billingKey"in E)){let n=await G(E);t(n)}else t({transactionType:"IDENTITY_VERIFICATION",identityVerificationId:e.identityVerificationId,identityVerificationTxId:e.identityVerificationTxId,code:"UnknownError",message:"올바르지 않은 본인인증 결과가 반환되었습니다."})},onTransactionOver:async(R,E)=>{await P(),R===p.TransactionType.IDENTITY_VERIFICATION&&"identityVerificationTxId"in E?t(E):s(new C.IdentityVerificationError({code:"UnknownError",message:"올바르지 않은 본인인증 결과가 반환되었습니다."}))},onForceClose:async()=>{let R={transactionType:"IDENTITY_VERIFICATION",identityVerificationId:e.identityVerificationId,identityVerificationTxId:e.identityVerificationTxId};try{let E=await Ee(e.storeId,e.identityVerificationId,e.identityVerificationTxId),{status:n}=E;switch(n){case"STATUS_VERIFIED":{t(R);break}case"STATUS_FAILED":{let{failure:o}=E,{code:T,message:I}=(()=>{if(o){let{pgCode:A,pgMessage:U}=o;if(U)return{code:"PG_PROVIDER_ERROR",message:A?`[${A}] ${U}`:U}}return{code:"PORTONE_ERROR",message:o?.message||"본인인증에 실패하였습니다."}})();t({...R,code:T,message:I});break}case"STATUS_PREPARED":{let o=await G({pgProvider:e.pgProvider,storeId:e.storeId,identityVerificationId:e.identityVerificationId,identityVerificationTxId:e.identityVerificationTxId,redirectUrl:e.redirectUrl,message:"사용자가 본인인증을 취소하였습니다."});t(o);break}default:{t({...R,code:"UnknownError",message:"해당 본인인증 건의 상태 오류로 인해 요청을 처리할 수 없습니다."});break}}}catch(E){t({...R,code:E.code||"UnknownError",message:`\uBCF8\uC778\uC778\uC99D \uD31D\uC5C5 \uC885\uB8CC \uD6C4 \uC11C\uBC84\uC640 \uD1B5\uC2E0\uD558\uB294 \uACFC\uC815\uC5D0\uC11C \uC624\uB958\uAC00 \uBC1C\uC0DD\uD558\uC600\uC2B5\uB2C8\uB2E4. ${E.message}`})}}})})}catch(r){throw await P(),r instanceof C.IdentityVerificationError?r:new C.IdentityVerificationError({code:"UnknownError",message:`\uBCF8\uC778\uC778\uC99D \uCC3D \uD638\uCD9C\uC5D0 \uC2E4\uD328\uD558\uC600\uC2B5\uB2C8\uB2E4. ${r.message}`})}}var sr=H;export{sr as default,Pe as requestIdentityVerification,pe as requestIssueBillingKey,Oe as requestPayment,a as slots};